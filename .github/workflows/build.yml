name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - feature/*
      - test/*
    tags:
      - "v*"
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  setup-docker-buildkit:
    name: BuildKit docker agent initialization
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-currency-rates-api:
    name: Carrency Rates Api Quality Gate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Set up 'Find Current Pull Request'
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open

      - name: Get pull request ID
        run: echo "Your PR is ${PR}"
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}

      - name: Enquire last git tag
        id: last_tag
        shell: bash
        run: |
          tag_v=$(git describe --tags $(git rev-list --tags --max-count=1))
          tag=$(echo $tag_v | sed 's/v//')

          echo "TARGET_TAG=${tag}" >> $GITHUB_OUTPUT

      - name: Build and push docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          RUN_ATTEMPT: ${{ github.run_attempt }}
          PULL_REQUEST_ID: ${{ steps.findPr.outputs.pr }}
          PULL_REQUEST_SOURCE_BRANCH: ${{ github.ref }}
          PULL_REQUEST_TARGET_BRANCH: refs/heads/master
          ACTION: ${{ github.action }}
          EVENT_NAME: ${{ github.event_name }}
        shell: bash
        run: |

          echo "latest tag is ${{ steps.last_tag.outputs.TARGET_TAG }}"

          docker build \
          --target 'publish' -t "homebudget-rates-api:${{ steps.last_tag.outputs.TARGET_TAG }}" \
          --build-arg PULL_REQUEST_ID='${{ steps.findPr.outputs.pr }}' \
          --build-arg PULL_REQUEST_SOURCE_BRANCH='${{ github.ref }}' \
          --build-arg PULL_REQUEST_TARGET_BRANCH=refs/heads/master \
          --build-arg GITHUB_RUN_ID='${{ github.run_id }}' \
          --build-arg SONAR_TOKEN='${{ env.SONAR_TOKEN }}' \
          .

          docker push allmantool/homebudget-rates-api:${tag}
